<?php
use Symfony\Component\Finder\Finder;
use Symfony\Component\Yaml\Parser;
use Symfony\Component\Yaml\Dumper;

/**
 * Implements hook_library_info_build().
 */
function kalastatic_library_info_build() {
  $build_file_path = \Drupal::config('kalastatic.settings')->get('kalastatic_build_path');
  $build_path = str_replace(DRUPAL_ROOT, '', $build_file_path);

  $libraries = [];
  $libraries['kalastatic'] = [
    'dependencies' => [
      'core/jquery',
    ],
    'license' => [
      'name' => 'MIT',
      'url' => 'https://opensource.org/licenses/MIT',
      'gpl-compatible' => TRUE,
    ],
    'css' => [
      'theme' => [
        $build_path . '/styles/main.css' => [],
      ],
    ],
  ];

  // Go through all the js files in the js folder and add them as part of the
  // library.
  $js_path = $build_path . '/js';
  foreach (scandir($js_path) as $key => $filename) {
    if (preg_match('/^.*\.(js)$/i', $filename)) {
      $libraries['kalastatic']['js'][$js_path . '/' . $filename] = [
        'type' => 'internal',
        'minified' => FALSE,
      ];
    }
  }

  return $libraries;
}

/**
 * Return the default path to Kalastatic
 *
 * The assumption is that it is inside a folder called 'kalastatic' in the
 * current default theme.
 */
function kalastatic_path_to_src_default() {
  $default_theme = \Drupal::config('system.theme')->get('default');
  return drupal_get_path('theme', $default_theme) . '/kalastatic';
}

/**
 * Return the path to the default build folder.
 *
 * Grep the kalastatic.yml file inside of the Kalastatic src folder and work out
 * where it's being built to.
 */
function kalastatic_path_to_build_default() {
  // TODO: Work some yaml magic.
  return kalastatic_path_to_src_default() . '/build';
}

/**
 * Implements hook_preprocess_html().
 *
 * Adds any KalaStatic-specific variables to Twig.
 */
function kalastatic_preprocess_html(&$variables) {
  // Add the build_path global variable so Twig can use it.
  if (!isset($variables['build_path'])) {
    // TODO Figure out the true destination path from kalastatic.yaml.
    $variables['build_path'] = base_path() . 'kalastatic/';
  }
}

/**
 * Get Kalastatic settings from kalastatic.yaml file.
 */
function kalastatic_get_settings($drupal_root_paths = TRUE) {
  // Find a kalastatic.yaml file.
  $finder = new Finder();
  $iterator = $finder
    ->name('kalastatic.yaml')
    ->in('..');

  // Hopefully there's only one :/
  $settings = [];
  foreach ($iterator as $file_path => $file) {
    $yaml = new Parser();
    $settings = $yaml->parse(file_get_contents($file_path));
  }
  return $drupal_root_paths ? kalastatic_drupal_root_paths($settings) : $settings;
}

/**
 * If we are dealing with a composer project where Drupal is nested one
 * folder deep in the project the paths defined in kalastatic.yaml will have 1
 * more arg than Drupal knows about so we need to remove it.
 */
function kalastatic_drupal_root_paths($settings) {
  $root_args = explode('/', DRUPAL_ROOT);
  $drupal_parent = end($root_args);
  $adjust = ['source', 'destination'];
  foreach ($settings as $setting => $path) {
    if (in_array($setting, $adjust)) {
      $path_args = explode('/', $path);
      $prefix = reset($path_args);
      if ($prefix == $drupal_parent) {
        // We add 1 to get rid of a preceding slash.
        $length = strlen($prefix) + 1;
        $settings[$setting] = substr($path, $length);
      }
    }
  }
  return $settings;
}
